// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "../../../";

export type Object = {
	"object_id": string,
	"name": string
};

export const Object = autoguard.guards.Object.of({
	"object_id": autoguard.guards.String,
	"name": autoguard.guards.String
});

export namespace Autoguard {
	export type Guards = {
		"Object": Object
	};

	export const Guards = {
		"Object": Object
	};

	export type Options = Record<string, undefined | boolean | number | string>;

	export const Options = autoguard.guards.Record.of(autoguard.guards.Union.of(
		autoguard.guards.Boolean,
		autoguard.guards.Number,
		autoguard.guards.String
	));

	export type Headers = Record<string, undefined | boolean | number | string>;

	export const Headers = autoguard.guards.Record.of(autoguard.guards.Union.of(
		autoguard.guards.Boolean,
		autoguard.guards.Number,
		autoguard.guards.String
	));

	export type Requests = {
		"GET:/": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"POST:/": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/one": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/one/": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/one/two": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<dynamic_boolean_component>": {
			"options": Options & {
				"dynamic_boolean_component": boolean
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<dynamic_number_component>": {
			"options": Options & {
				"dynamic_number_component": number
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<dynamic_string_component>": {
			"options": Options & {
				"dynamic_string_component": string
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<dynamic_component_one>/<dynamic_component_two>": {
			"options": Options & {
				"dynamic_component_one": string,
				"dynamic_component_two": string
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<quoted key>": {
			"options": Options & {
				"quoted key": string
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/url-encoded%20component": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters01": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters02": {
			"options": Options & {
				"required_boolean_parameter": boolean
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters03": {
			"options"?: Options & {
				"optional_boolean_parameter"?: boolean
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters04": {
			"options": Options & {
				"required_number_parameter": number
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters05": {
			"options"?: Options & {
				"optional_number_parameter"?: number
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters06": {
			"options": Options & {
				"required_string_parameter": string
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters07": {
			"options"?: Options & {
				"optional_string_parameter"?: string
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters08": {
			"options": Options & {
				"parameter_one": string,
				"parameter_two": string
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters09": {
			"options": Options & {
				"quoted key": string
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers01": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers02": {
			"options"?: Options & {},
			"headers": Headers & {
				"required_boolean_request_header": boolean
			},
			"payload"?: undefined
		},
		"GET:/request_headers03": {
			"options"?: Options & {},
			"headers"?: Headers & {
				"optional_boolean_request_header"?: boolean
			},
			"payload"?: undefined
		},
		"GET:/request_headers04": {
			"options"?: Options & {},
			"headers": Headers & {
				"required_number_request_header": number
			},
			"payload"?: undefined
		},
		"GET:/request_headers05": {
			"options"?: Options & {},
			"headers"?: Headers & {
				"optional_number_request_header"?: number
			},
			"payload"?: undefined
		},
		"GET:/request_headers06": {
			"options"?: Options & {},
			"headers": Headers & {
				"required_string_request_header": string
			},
			"payload"?: undefined
		},
		"GET:/request_headers07": {
			"options"?: Options & {},
			"headers"?: Headers & {
				"optional_string_request_header"?: string
			},
			"payload"?: undefined
		},
		"GET:/request_headers08": {
			"options"?: Options & {},
			"headers": Headers & {
				"request_header_one": string,
				"request_header_two": string
			},
			"payload"?: undefined
		},
		"GET:/request_headers09": {
			"options"?: Options & {},
			"headers": Headers & {
				"quoted key": string
			},
			"payload"?: undefined
		},
		"GET:/response_headers01": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers02": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers03": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers04": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers05": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers06": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers07": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers08": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers09": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_payload01": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload": {
				"required_request_member": string
			}
		},
		"GET:/request_payload02": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload": {
				"optional_request_member"?: string
			}
		},
		"GET:/response_payload01": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_payload02": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/full_example": {
			"options": Options & {
				"parameter": string
			},
			"headers": Headers & {
				"request_header": string
			},
			"payload": {
				"in_request_payload": string
			}
		},
		"GET:/reference": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/binary_request": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload": autoguard.api.Binary
		},
		"GET:/binary_response": {
			"options"?: Options & {},
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/number/<number>": {
			"options": Options & {
				"number": number
			},
			"headers"?: Headers & {},
			"payload"?: undefined
		}
	};

	export const Requests = {
		"GET:/": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"POST:/": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/one": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/one/": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/one/two": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<dynamic_boolean_component>": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"dynamic_boolean_component": autoguard.guards.Boolean
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<dynamic_number_component>": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"dynamic_number_component": autoguard.guards.Number
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<dynamic_string_component>": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"dynamic_string_component": autoguard.guards.String
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<dynamic_component_one>/<dynamic_component_two>": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"dynamic_component_one": autoguard.guards.String,
					"dynamic_component_two": autoguard.guards.String
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<quoted key>": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"quoted key": autoguard.guards.String
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/url-encoded%20component": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters01": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters02": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"required_boolean_parameter": autoguard.guards.Boolean
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters03": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({
						"optional_boolean_parameter": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.Boolean
						)
					})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters04": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"required_number_parameter": autoguard.guards.Number
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters05": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({
						"optional_number_parameter": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.Number
						)
					})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters06": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"required_string_parameter": autoguard.guards.String
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters07": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({
						"optional_string_parameter": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.String
						)
					})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters08": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"parameter_one": autoguard.guards.String,
					"parameter_two": autoguard.guards.String
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters09": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"quoted key": autoguard.guards.String
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers01": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers02": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"required_boolean_request_header": autoguard.guards.Boolean
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers03": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({
						"optional_boolean_request_header": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.Boolean
						)
					})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers04": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"required_number_request_header": autoguard.guards.Number
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers05": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({
						"optional_number_request_header": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.Number
						)
					})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers06": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"required_string_request_header": autoguard.guards.String
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers07": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({
						"optional_string_request_header": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.String
						)
					})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers08": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"request_header_one": autoguard.guards.String,
					"request_header_two": autoguard.guards.String
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers09": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"quoted key": autoguard.guards.String
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers01": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers02": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers03": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers04": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers05": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers06": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers07": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers08": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers09": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_payload01": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Object.of({
				"required_request_member": autoguard.guards.String
			})
		}),
		"GET:/request_payload02": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Object.of({
				"optional_request_member": autoguard.guards.Union.of(
					autoguard.guards.Undefined,
					autoguard.guards.String
				)
			})
		}),
		"GET:/response_payload01": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_payload02": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/full_example": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"parameter": autoguard.guards.String
				})
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"request_header": autoguard.guards.String
				})
			),
			"payload": autoguard.guards.Object.of({
				"in_request_payload": autoguard.guards.String
			})
		}),
		"GET:/reference": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/binary_request": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.api.Binary
		}),
		"GET:/binary_response": autoguard.guards.Object.of({
			"options": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Options),
					autoguard.guards.Object.of({})
				)
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/number/<number>": autoguard.guards.Object.of({
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Options),
				autoguard.guards.Object.of({
					"number": autoguard.guards.Number
				})
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		})
	};

	export type Responses = {
		"GET:/": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"POST:/": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/one": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/one/": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/one/two": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<dynamic_boolean_component>": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<dynamic_number_component>": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<dynamic_string_component>": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<dynamic_component_one>/<dynamic_component_two>": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/<quoted key>": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/url-encoded%20component": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters01": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters02": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters03": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters04": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters05": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters06": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters07": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters08": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/parameters09": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers01": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers02": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers03": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers04": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers05": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers06": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers07": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers08": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_headers09": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers01": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_headers02": {
			"status"?: number,
			"headers": Headers & {
				"required_boolean_response_header": boolean
			},
			"payload"?: undefined
		},
		"GET:/response_headers03": {
			"status"?: number,
			"headers"?: Headers & {
				"optional_boolean_response_header"?: boolean
			},
			"payload"?: undefined
		},
		"GET:/response_headers04": {
			"status"?: number,
			"headers": Headers & {
				"required_number_response_header": number
			},
			"payload"?: undefined
		},
		"GET:/response_headers05": {
			"status"?: number,
			"headers"?: Headers & {
				"optional_number_response_header"?: number
			},
			"payload"?: undefined
		},
		"GET:/response_headers06": {
			"status"?: number,
			"headers": Headers & {
				"required_string_response_header": string
			},
			"payload"?: undefined
		},
		"GET:/response_headers07": {
			"status"?: number,
			"headers"?: Headers & {
				"optional_string_response_header"?: string
			},
			"payload"?: undefined
		},
		"GET:/response_headers08": {
			"status"?: number,
			"headers": Headers & {
				"response_header_one": string,
				"response_header_two": string
			},
			"payload"?: undefined
		},
		"GET:/response_headers09": {
			"status"?: number,
			"headers": Headers & {
				"quoted key": string
			},
			"payload"?: undefined
		},
		"GET:/request_payload01": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/request_payload02": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/response_payload01": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload": {
				"required_request_member": string
			}
		},
		"GET:/response_payload02": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload": {
				"optional_request_member"?: string
			}
		},
		"GET:/full_example": {
			"status"?: number,
			"headers": Headers & {
				"response_header": string
			},
			"payload": {
				"in_response_payload": string
			}
		},
		"GET:/reference": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload": Object
		},
		"GET:/binary_request": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		},
		"GET:/binary_response": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload": autoguard.api.Binary
		},
		"GET:/number/<number>": {
			"status"?: number,
			"headers"?: Headers & {},
			"payload"?: undefined
		}
	};

	export const Responses = {
		"GET:/": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"POST:/": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/one": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/one/": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/one/two": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<dynamic_boolean_component>": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<dynamic_number_component>": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<dynamic_string_component>": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<dynamic_component_one>/<dynamic_component_two>": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/<quoted key>": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/url-encoded%20component": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters01": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters02": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters03": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters04": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters05": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters06": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters07": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters08": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/parameters09": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers01": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers02": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers03": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers04": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers05": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers06": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers07": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers08": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_headers09": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers01": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers02": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"required_boolean_response_header": autoguard.guards.Boolean
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers03": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({
						"optional_boolean_response_header": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.Boolean
						)
					})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers04": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"required_number_response_header": autoguard.guards.Number
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers05": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({
						"optional_number_response_header": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.Number
						)
					})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers06": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"required_string_response_header": autoguard.guards.String
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers07": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({
						"optional_string_response_header": autoguard.guards.Union.of(
							autoguard.guards.Undefined,
							autoguard.guards.String
						)
					})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers08": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"response_header_one": autoguard.guards.String,
					"response_header_two": autoguard.guards.String
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_headers09": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"quoted key": autoguard.guards.String
				})
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_payload01": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/request_payload02": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/response_payload01": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Object.of({
				"required_request_member": autoguard.guards.String
			})
		}),
		"GET:/response_payload02": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Object.of({
				"optional_request_member": autoguard.guards.Union.of(
					autoguard.guards.Undefined,
					autoguard.guards.String
				)
			})
		}),
		"GET:/full_example": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => Headers),
				autoguard.guards.Object.of({
					"response_header": autoguard.guards.String
				})
			),
			"payload": autoguard.guards.Object.of({
				"in_response_payload": autoguard.guards.String
			})
		}),
		"GET:/reference": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Reference.of(() => Object)
		}),
		"GET:/binary_request": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		}),
		"GET:/binary_response": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.api.Binary
		}),
		"GET:/number/<number>": autoguard.guards.Object.of({
			"status": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Number
			),
			"headers": autoguard.guards.Union.of(
				autoguard.guards.Undefined,
				autoguard.guards.Intersection.of(
					autoguard.guards.Reference.of(() => Headers),
					autoguard.guards.Object.of({})
				)
			),
			"payload": autoguard.guards.Union.of(
				autoguard.guards.Undefined
			)
		})
	};
};
