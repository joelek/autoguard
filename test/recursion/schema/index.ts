// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "../../../dist/lib-shared";

export const array1: autoguard.serialization.MessageGuard<array1> = autoguard.guards.Array.of(autoguard.guards.String);

export type array1 = autoguard.guards.Array<autoguard.guards.String>;

export const array2: autoguard.serialization.MessageGuard<array2> = autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.String));

export type array2 = autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.String>>;

export const array3: autoguard.serialization.MessageGuard<array3> = autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.String)));

export type array3 = autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.String>>>;

export const array4: autoguard.serialization.MessageGuard<array4> = autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.String))));

export type array4 = autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.String>>>>;

export const array5: autoguard.serialization.MessageGuard<array5> = autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.Array.of(autoguard.guards.String)))));

export type array5 = autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.Array<autoguard.guards.String>>>>>;

export const intersection1: autoguard.serialization.MessageGuard<intersection1> = autoguard.guards.Object.of({}, {});

export type intersection1 = autoguard.guards.Object<{}, {}>;

export const intersection2: autoguard.serialization.MessageGuard<intersection2> = autoguard.guards.Intersection.of(
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {})
);

export type intersection2 = autoguard.guards.Intersection<[
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>
]>;

export const intersection3: autoguard.serialization.MessageGuard<intersection3> = autoguard.guards.Intersection.of(
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {})
);

export type intersection3 = autoguard.guards.Intersection<[
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>
]>;

export const intersection4: autoguard.serialization.MessageGuard<intersection4> = autoguard.guards.Intersection.of(
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {})
);

export type intersection4 = autoguard.guards.Intersection<[
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>
]>;

export const intersection5: autoguard.serialization.MessageGuard<intersection5> = autoguard.guards.Intersection.of(
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {}),
	autoguard.guards.Object.of({}, {})
);

export type intersection5 = autoguard.guards.Intersection<[
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>,
	autoguard.guards.Object<{}, {}>
]>;

export const union1: autoguard.serialization.MessageGuard<union1> = autoguard.guards.String;

export type union1 = autoguard.guards.String;

export const union2: autoguard.serialization.MessageGuard<union2> = autoguard.guards.String;

export type union2 = autoguard.guards.String;

export const union3: autoguard.serialization.MessageGuard<union3> = autoguard.guards.String;

export type union3 = autoguard.guards.String;

export const union4: autoguard.serialization.MessageGuard<union4> = autoguard.guards.String;

export type union4 = autoguard.guards.String;

export const union5: autoguard.serialization.MessageGuard<union5> = autoguard.guards.String;

export type union5 = autoguard.guards.String;

export const preceedence1: autoguard.serialization.MessageGuard<preceedence1> = autoguard.guards.Union.of(
	autoguard.guards.Array.of(autoguard.guards.String),
	autoguard.guards.String
);

export type preceedence1 = autoguard.guards.Union<[
	autoguard.guards.Array<autoguard.guards.String>,
	autoguard.guards.String
]>;

export const preceedence2: autoguard.serialization.MessageGuard<preceedence2> = autoguard.guards.Union.of(
	autoguard.guards.String,
	autoguard.guards.Array.of(autoguard.guards.String)
);

export type preceedence2 = autoguard.guards.Union<[
	autoguard.guards.String,
	autoguard.guards.Array<autoguard.guards.String>
]>;

export const preceedence3: autoguard.serialization.MessageGuard<preceedence3> = autoguard.guards.Union.of(
	autoguard.guards.String,
	autoguard.guards.Intersection.of(
		autoguard.guards.Object.of({
			"a": autoguard.guards.String
		}, {}),
		autoguard.guards.Object.of({
			"b": autoguard.guards.String
		}, {})
	)
);

export type preceedence3 = autoguard.guards.Union<[
	autoguard.guards.String,
	autoguard.guards.Intersection<[
		autoguard.guards.Object<{
			"a": autoguard.guards.String
		}, {}>,
		autoguard.guards.Object<{
			"b": autoguard.guards.String
		}, {}>
	]>
]>;

export const preceedence4: autoguard.serialization.MessageGuard<preceedence4> = autoguard.guards.Union.of(
	autoguard.guards.Intersection.of(
		autoguard.guards.Object.of({
			"a": autoguard.guards.String
		}, {}),
		autoguard.guards.Object.of({
			"b": autoguard.guards.String
		}, {})
	),
	autoguard.guards.String
);

export type preceedence4 = autoguard.guards.Union<[
	autoguard.guards.Intersection<[
		autoguard.guards.Object<{
			"a": autoguard.guards.String
		}, {}>,
		autoguard.guards.Object<{
			"b": autoguard.guards.String
		}, {}>
	]>,
	autoguard.guards.String
]>;

export const empty1: autoguard.serialization.MessageGuard<empty1> = autoguard.guards.Tuple.of();

export type empty1 = autoguard.guards.Tuple<[]>;

export const empty2: autoguard.serialization.MessageGuard<empty2> = autoguard.guards.Object.of({}, {});

export type empty2 = autoguard.guards.Object<{}, {}>;

export const reference1: autoguard.serialization.MessageGuard<reference1> = autoguard.guards.Reference.of(() => reference2);

export type reference1 = autoguard.guards.Reference<reference2>;

export const reference2: autoguard.serialization.MessageGuard<reference2> = autoguard.guards.Object.of({}, {});

export type reference2 = autoguard.guards.Object<{}, {}>;

export const nested: autoguard.serialization.MessageGuard<nested> = autoguard.guards.Array.of(autoguard.guards.Group.of(autoguard.guards.Union.of(
	autoguard.guards.Array.of(autoguard.guards.String),
	autoguard.guards.String
)));

export type nested = autoguard.guards.Array<autoguard.guards.Group<autoguard.guards.Union<[
	autoguard.guards.Array<autoguard.guards.String>,
	autoguard.guards.String
]>>>;

export namespace Autoguard {
	export const Guards = {
		"array1": autoguard.guards.Reference.of(() => array1),
		"array2": autoguard.guards.Reference.of(() => array2),
		"array3": autoguard.guards.Reference.of(() => array3),
		"array4": autoguard.guards.Reference.of(() => array4),
		"array5": autoguard.guards.Reference.of(() => array5),
		"intersection1": autoguard.guards.Reference.of(() => intersection1),
		"intersection2": autoguard.guards.Reference.of(() => intersection2),
		"intersection3": autoguard.guards.Reference.of(() => intersection3),
		"intersection4": autoguard.guards.Reference.of(() => intersection4),
		"intersection5": autoguard.guards.Reference.of(() => intersection5),
		"union1": autoguard.guards.Reference.of(() => union1),
		"union2": autoguard.guards.Reference.of(() => union2),
		"union3": autoguard.guards.Reference.of(() => union3),
		"union4": autoguard.guards.Reference.of(() => union4),
		"union5": autoguard.guards.Reference.of(() => union5),
		"preceedence1": autoguard.guards.Reference.of(() => preceedence1),
		"preceedence2": autoguard.guards.Reference.of(() => preceedence2),
		"preceedence3": autoguard.guards.Reference.of(() => preceedence3),
		"preceedence4": autoguard.guards.Reference.of(() => preceedence4),
		"empty1": autoguard.guards.Reference.of(() => empty1),
		"empty2": autoguard.guards.Reference.of(() => empty2),
		"reference1": autoguard.guards.Reference.of(() => reference1),
		"reference2": autoguard.guards.Reference.of(() => reference2),
		"nested": autoguard.guards.Reference.of(() => nested)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
