// This file was auto-generated by @joelek/autoguard. Edit at own risk.

import * as autoguard from "../../../dist/lib-shared";
import { ExternalType1 } from ".././module";
import { ExternalType2 } from "../../modules/module";
import { ExternalType3 } from ".././dummy/../module/.";

export const ExternalReference1: autoguard.serialization.MessageGuard<ExternalReference1> = autoguard.guards.Reference.of(() => ExternalType1);

export type ExternalReference1 = autoguard.guards.Reference<ExternalType1>;

export const ExternalReference2: autoguard.serialization.MessageGuard<ExternalReference2> = autoguard.guards.Reference.of(() => ExternalType2);

export type ExternalReference2 = autoguard.guards.Reference<ExternalType2>;

export const ExternalReference3: autoguard.serialization.MessageGuard<ExternalReference3> = autoguard.guards.Reference.of(() => ExternalType3);

export type ExternalReference3 = autoguard.guards.Reference<ExternalType3>;

export const ExternalReference4: autoguard.serialization.MessageGuard<ExternalReference4> = autoguard.guards.Object.of({
	"key": autoguard.guards.Reference.of(() => ExternalType1)
}, {});

export type ExternalReference4 = autoguard.guards.Object<{
	"key": autoguard.guards.Reference<ExternalType1>
}, {}>;

export const InternalReference1: autoguard.serialization.MessageGuard<InternalReference1> = autoguard.guards.Reference.of(() => InternalType);

export type InternalReference1 = autoguard.guards.Reference<InternalType>;

export const InternalReference2: autoguard.serialization.MessageGuard<InternalReference2> = autoguard.guards.Object.of({
	"key": autoguard.guards.Reference.of(() => InternalType)
}, {});

export type InternalReference2 = autoguard.guards.Object<{
	"key": autoguard.guards.Reference<InternalType>
}, {}>;

export const InternalType: autoguard.serialization.MessageGuard<InternalType> = autoguard.guards.String;

export type InternalType = autoguard.guards.String;

export namespace Autoguard {
	export const Guards = {
		"ExternalReference1": autoguard.guards.Reference.of(() => ExternalReference1),
		"ExternalReference2": autoguard.guards.Reference.of(() => ExternalReference2),
		"ExternalReference3": autoguard.guards.Reference.of(() => ExternalReference3),
		"ExternalReference4": autoguard.guards.Reference.of(() => ExternalReference4),
		"InternalReference1": autoguard.guards.Reference.of(() => InternalReference1),
		"InternalReference2": autoguard.guards.Reference.of(() => InternalReference2),
		"InternalType": autoguard.guards.Reference.of(() => InternalType)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
