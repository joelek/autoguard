guard MyAnyType: any;

guard MyArrayOfStringType: string[];

guard MyBigIntType: bigint;

guard MyBinaryType: binary;

guard MyBooleanType: boolean;

guard MyBooleanliteralType: true;

guard MyGroupType: (any); # Used when different precedence is required.

guard MyIntegerType: integer;

guard MyIntersectionType: {
	"a_string_member": string
} & {
	"another_string_member": string
};

guard MyNullType: null;

guard MyNumberType: number;

guard MyNumberLiteralType: 1337;

guard MyObjectType: {
	"string_member": string,
	"optional_member"?: string,
	"quoted-member": string
};

guard MyRecordOfStringType: { string };

guard MyReferenceType: MyObjectType;

guard MyStringType: string;

guard MyStringLiteralType: "räksmörgås";

guard MyTupleType: [
	string,
	number
];

guard MyUndefinedType: undefined;

guard MyUnionType: string | null;
